__include__: [
  './dfine_hgnetv2_x_coco.yml',
  '../base/deim.yml'
]

output_dir: ./outputs/5_shot_v2

HGNetv2:
  pretrained: True
  freeze_at: 0

optimizer:
  type: AdamW
  params: 
    - 
      params: '^(?=.*backbone)(?!.*norm|bn).*$'
      lr: 0.000005   
    - 
      params: '^(?=.*(?:encoder|decoder))(?=.*(?:norm|bn)).*$'
      weight_decay: 0.

  lr: 0.00001
  betas: [0.9, 0.999]
  weight_decay: 0.00025
  
# Increase to search for the optimal ema
epoches: 300 # 72 + 2n

## Our LR-Scheduler
flat_epoch: 152     # 4 + epoch // 2, e.g., 40 = 4 + 72 / 2
no_aug_epoch: 15

train_dataloader: 
  total_batch_size: 2
  num_workers: 4
  dataset: 
    transforms:
      policy:
        epoch: [4, 140, 285]   # list 
    img_folder: /root/data/insulator-defect-detection/project/train/img
    ann_file: /root/data/insulator-defect-detection/fsod_coco/train_5shot_seed0.json

val_dataloader:
  dataset: 
    img_folder: /root/data/insulator-defect-detection/project/val/img
    ann_file: /root/data/insulator-defect-detection/fsod_coco/val_50.json

  collate_fn:
    mixup_epochs: [4, 140]
    stop_epoch: 285